<%;################################################
## This file and all its content belong to Faveod S.A.S unless a commercial
## contract signed by a representant of Faveod S.A.S states otherwise.
##########
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
################################################
## This has been generated by Faveod Generator on Thu Oct 31 16:38:20 +0100 2013
## It should be placed at 'app/views/dev_feedbacks/_tree_list.html.erb'
## All manual modifications will be destroyed on next generation
################################################ %>
<% if row.id == 0 %>
<div id="dev_feedback_0_div" class="tree_root">
	<% if row.children.count == 0 %>
<span class="tree_element_title"><%= _(%q{No record}) %></span>
<% else
	row.children.each do |r| %>
	<div class="tree_element tree_level_<%= r.level %>" id="dev_feedback_<%= r.id %>_div">
		<%= tree_actions(r) %>
		<%= if r.children.count == 0 
			image_tag('std/transp.gif', :width => 18)
		else 
			image_tag('std/plus.gif', :id => "dev_feedback_#{r.id}_img", :class => 'collapser', :onclick => "tree_children_toggle('dev_feedback_#{r.id}_div', 'dev_feedbacks')")
		end %>
	<span class="tree_element_title" ondblclick="window.location='/dev_feedbacks/show/<%= r.id %>'"><%= r.disp_name %></span>
	</div><% end %>
<% end %>
</div>
<% else
	row.children.each do |ch| %>
<div class="tree_element tree_level_<%= ch.level %>" id="dev_feedback_<%= ch.id %>_div">
<%= tree_actions(ch) %>
<%= image_tag('std/transp.gif', :width => 18) if ch.children.count == 0 %>
<% if ch.level < 2 %>
  <%= image_tag('std/minus.gif', :id => "dev_feedback_#{ch.id}_img", :class => 'collapser', :onclick => "tree_children_toggle('dev_feedback_#{ch.id}_div', 'dev_feedbacks')") if ch.children.count > 0 %>
	<span class="tree_element_title" ondblclick="window.location='/dev_feedbacks/show/<%= ch.id %>'"><%= ch.disp_name %></span>
	<% ch.children.each do |r| %>
		<%= render :partial => 'tree_list', :locals => {:row => r} %><% end %>
<% else %>
	<%= image_tag('std/plus.gif', :id => "dev_feedback_#{ch.id}_img", :class => 'collapser', :onclick => "tree_children_toggle('dev_feedback_#{ch.id}_div', 'dev_feedbacks')") if ch.children.count > 0 %>
	<span class="tree_element_title" ondblclick="window.location='/dev_feedbacks/show/<%= ch.id %>'"><%= ch.disp_name %></span>
<% end %>
</div><% end %>
<% end %>

<script type="text/javascript">
//<![CDATA[





function onload_tree_list_call() {

var r=$('dev_feedback_0_div')
if (r.style.width == '') {
  r.style.display='table'
  r.style.width=r.getWidth()+120+'px'
  r.style.display=''
}

Draggables.drags.each(function(elt) {if (!elt.element.parentNode){ elt.destroy()}})
Droppables.drops.each(function(elt) {if (!elt.element.parentNode){ Droppables.remove(elt.element) }})

var drags = Draggables.drags.map(function(elt) {return elt.element.parentNode ? elt.element.id : ''})
var drops = Droppables.drops.map(function(elt) {return elt.element.id})
r.select('DIV.tree_element').each(function(elt) {
	elt.observe('mouseover', function(ev) {this.down('SPAN.tree_actions').setStyle('visibility:visible')})
	elt.observe('mouseout', function(ev) {this.down('SPAN.tree_actions').setStyle('visibility:hidden')})
	if (!drags.include(elt.id)) {
		new Draggable(elt.id, {revert:true})
	}
	if (!drops.include(elt.id)) {
		Droppables.add(elt.id, {hoverclass:'container-active', accept:'tree_element', onDrop:function(drag){
			new Ajax.Updater(elt.parentNode.id, '/dev_feedbacks/tree_move/'+ drag.id.gsub(/.*_(\d+)_div/, '#{1}'),
				{asynchronous:true, evalScripts:true, parameters:'receiver='+ elt.id.gsub(/.*_(\d+)_div/, '#{1}')})
			drag.remove()
		}})
	}
})
}
<% if request.xhr? %>onload_tree_list_call();<% else %>if (typeof(Event) != 'undefined' && Event.observe) {
Event.observe(window, 'load', onload_tree_list_call)
} else if (typeof(jQuery) != 'undefined') {
$(window).load(onload_tree_list_call)
}<% end %>


//]]>
</script>