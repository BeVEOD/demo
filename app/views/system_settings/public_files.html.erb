<%;################################################
## This file and all its content belong to Faveod S.A.S unless a commercial
## contract signed by a representant of Faveod S.A.S states otherwise.
##########
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
################################################
## This has been generated by Faveod Generator on Thu Oct 31 16:38:10 +0100 2013
## It should be placed at 'app/views/system_settings/public_files.html.erb'
## All manual modifications will be destroyed on next generation
################################################ %>
<!-- jstree -->
<script type="text/javascript" src="/javascripts/jquery.jstree.js"></script>

<h2 class="title"><%= _(%q{Public Files Manager}) %></h2>

<div id="file_manager">
	<div id="tree" class="jstree-default"></div>
	<div id="node-details" class="details">
		<h3 id="file-name"></h3>
		<p id="file-type"></p>
		<img id="file-img" style="display: none;"></img>
		<iframe id="html-file-preview" style="display: none;"></iframe>
		<code id="readable-file-preview"></code>
		<p id="file-content"></p>
		<a id="file-dl"></a>
		<p id="file-size"></p>
		
		<hr class="details" style="display: none;"/>
	
		<button class="unzip" type="button" onclick="JavaScript: unzip()" style="display: none;">
			<%= j _("Unzip") %>
		</button>
		<label class="unzip" style="display: none;"><%= _(%q{This button will unzip the file in the current folder.}) %></label>
	
		<iframe id="upload_frame" src="/system_settings/upload_form" frameborder="0" style="display: none;"
			onload="JavaScript: refresh()">
		</iframe>
	</div>

</div>

<script type="text/javascript">
//<![CDATA[
/* UPLOAD */
function upload_action() {
	var path = jQuery.jstree._reference("#tree")._get_node(null, false).data("id");
	if ($.browser.msie) {
		window.frames["upload_frame"].document.getElementById("upload_file").action = "/system_settings/public_files?path=" + path;
	} else {
		$("#upload_frame")[0].contentDocument.getElementById("upload_file").action = "/system_settings/public_files?path=" + path;
	}
}

/* REFRESH PARENT FOLDER */
function refresh(node) {
	if (typeof(node) === 'undefined') {
		var tree = jQuery.jstree._reference("#tree");
		var currentNode = tree._get_node(null, false);
		var parentNode = tree._get_parent(currentNode);
		tree.refresh(parentNode);
	} else {
		var tree = jQuery.jstree._reference("#tree");
		var parentNode = tree._get_parent(node);
		tree.refresh(parentNode);
	}
}

/* REFRESH PARENT FOLDER */
function refresh_cur(node) {
	var tree = jQuery.jstree._reference("#tree");
	var currentNode = tree._get_node(null, false);
	tree.refresh(currentNode);
}

/* CREATE */
function create_dir(node) {
	var path = "";
	if (node.attr("rel") === "folder") {
		path = node.data("id") + "/New node";
	} else {
		var path_tab = node.data("id").split("/");
		path_tab.pop();
		path_tab.push("New node");
		path = path_tab.join("/");
	}
	$.ajax({
		type	 : "POST",
		async	 : false,
		url	 : "/system_settings/public_files?cmd=newdir&dir=" + path,
		error	 : function(msg) { alert ("<%= j _("Error: ") %>" + msg); },
		complete : function() { refresh(node) }
	});
}

/* LIST */
function listing_files (node) {
	if (node < 0) { return "/system_settings/public_files.json?cmd=get"; }
	else { return "/system_settings/public_files.json?cmd=get&path=" + node.data("id"); }
}

/* MOVE */
function move (event, data) {
	var oldpath = data.rslt.o.data("id");
	var filename = data.rslt.o.data("id").split("/").pop();
	var newpath = "";

	if ((data.rslt.p === "last") && (data.rslt.r.attr("rel") === "folder")) {
		newpath = data.rslt.r.data("id") + "/" + filename;
	} else {
		var newpath_tab = data.rslt.r.data("id").split("/");
		newpath_tab.pop();
		newpath_tab.push(filename);
		newpath = newpath_tab.join("/");
	}

	$.ajax({
		type	 : "POST",
		async	 : false,
		url	 : "/system_settings/public_files?cmd=rename&oldname=" + oldpath + "&newname=" + newpath,
		error	 : function(msg) { alert("<%= j _("Error: ") %>" + msg ); },
		complete : function() {
			jQuery.jstree._reference("#tree").refresh(data.rslt.o);
 			jQuery.jstree._reference("#tree").refresh(data.rslt.r);
		}
	});
}

/* REMOVE */
function remove(node) {
	if ((node.attr("rel") != "folder") ||
	 ((node.attr("nbchild_and_size").split(",")[0] === "0") && (node.attr("nbchild_and_size").split(",")[1] === "0"))) {
		var msg = "<%=j _("Are you sure that you want to delete ") %>" + node.data("name") + "?";
		if (confirm(msg))
		{
			this.remove(node);
			$.ajax({
				type	 : "POST",
				async	 : false,
				url	 : "/system_settings/public_files?cmd=delete&file=" + node.data("id"),
				error	 : function(msg) { alert("<%= j _("Error: ") %>" + msg ); },
				complete : function() { refresh() }
			});
		}
	} else  {
		var msg = "<%=j _("Directory ") %>" + node.data("name") + " <%= j _("is not empty, and could not be destroyed.") %>";
		alert(msg);
	}
}

/* RENAME */
function rename(event, data) {
	// Get the complete new path
	var new_name_tab = data.rslt.obj.data("id").split("/");
	new_name_tab.pop();
	new_name_tab.push(data.rslt.name);
	var new_name = new_name_tab.join("/");
	
	var tree = jQuery.jstree._reference("#tree");
	var currentNode = tree._get_node(null, false);

	// Rename the file/folder in the server
	$.ajax({
		type	 : "POST",
		async	 : false,
		url	 : "/system_settings/public_files?cmd=rename&oldname=" + data.rslt.obj.data("id") + "&newname=" + new_name,
		error	 : function(msg) { alert("<%= j _("Error: ") %>" + msg ); },
		complete : function() { refresh(currentNode) }
	});
}

/* PREVIEW */
function preview(event, data) {
    $("#file-name").html(data.rslt.obj.data("name"));
    $("#file-dl").html("");
    $("#file-dl").attr("href", "");
    $("#file-content").html("");
    $("#readable-file-preview").html("");
    $("#file-img").css("display", "none");
    $("#html-file-preview").css("display", "none");
    $(".unzip").css("display", "none");

    if (data.rslt.obj.attr("rel") === "folder") {
	$("#upload_frame").css("display", "block");

	$("#file-size").html("<b>" + "<%= j _("Size: ") %>" +
			     "</b>" + data.rslt.obj.attr("nbchild_and_size").split(",")[2]);

	$("#file-type").html( "<%= j _("Type: ") %>" + "<%= j _("Folder") %>");
	$("#file-content").html( "<%= j _("Contents: ") %>" +
				 data.rslt.obj.attr("nbchild_and_size").split(",")[0] + "<%= j _(" Folders, ") %>" +
				 data.rslt.obj.attr("nbchild_and_size").split(",")[1] + "<%= j _(" Files.") %>");
    } else if (data.rslt.obj.attr("rel") === "link") {
	$("#upload_frame").css("display", "none");
	$("#file-size").html("");
	$("#file-content").html("");
	$("#file-type").html( "<%= j _("Type: ") %>" + "<%= j _("Symbolik link to") %> " + data.rslt.obj.attr("link"));
	$("#file-dl").html("");
    } else {
	$("#upload_frame").css("display", "none");
	
	$("#file-dl").html( "<%= j _("Download") %>");
    	$("#file-dl").attr("href", data.rslt.obj.data("id"));

	$("#file-size").html("<b>" + "<%= j _("Size: ") %>" + "</b>" + data.rslt.obj.attr("size"));

	var type = data.rslt.obj.attr("rel");
	$("#file-type").html( "<%= j _("Type: ") %>" + type);
	if ((type === "png") || (type === "gif") || (type === "jpeg") || (type === "jpg")) {
	    $("#file-img").attr("src", data.rslt.obj.data("id"));
	    $("#file-img").css("display", "block");
	} else if (type === "zip") {
	    $(".unzip").css("display", "inline");
	} else if (type === "html") {
	    $("#html-file-preview").attr("src", data.rslt.obj.data("id"));
	    $("#html-file-preview").css("display", "block");
	} else if ((type === "txt") || (type === "log") || (type === "xml") || (type === "rb") || (type === "css")) {
	    $.ajax({
		type	: "POST",
		async	: false,
		url	: "/system_settings/public_files?cmd=preview&path=" + data.rslt.obj.data("id"),
		error	: function(msg) { alert("<%= j _("Error: ") %>" + msg ); },
		success	: function(result) { $("#readable-file-preview").html(result) }
	    });
	}
    }
}

/* ZIP */
function zip() {
    var tree = jQuery.jstree._reference("#tree");
    $.ajax({
	type	 : "POST",
	async	 : false,
	url	 : "/system_settings/public_files?cmd=zip&path=" + tree.get_selected().data("id") + "&folder=" + tree.get_selected().data("name"),
	error	 : function(msg) { alert( "<%= j _("Error: ") %>" + msg ); },
	complete : function() { refresh() }
    });
}

/* UNZIP */
function unzip() {
    var tree = jQuery.jstree._reference("#tree");
    var zip  = tree.get_selected().data("id")
    var dest = tree.get_selected().data("id").substring(0, tree.get_selected().data("id").length - 4)
    $.ajax({
	type	 : "POST",
	async	 : false,
	url	 : "/system_settings/public_files?cmd=unzip&zip=" + zip + "&dest=" + dest,
	error	 : function(msg) { alert( "<%= j _("Error: ") %>" + msg ); },
	complete : function() { refresh() }
    });
}

/**********/
/* JSTREE */
/**********/

$(function () {
    $("#tree").jstree({
	"plugins" : [ "themes", "json_data", "ui", "dnd", "types", "contextmenu", "crrm" ],
	"json_data" : {
	    "ajax" : { "url" : listing_files }
	},
	"types" : {
	    "types" : {
		<% type_with_icon = []
		    path_folder_icon = File.join(Rails.public_path, "images/file_icons16x16")
		    Dir.entries(path_folder_icon).map{|f|
		      type_with_icon << File.basename(f, ".png") if f != "." && f != ".."
		    }
		    type_with_icon.each{|t| %>
				"<%= t %>" : { "icon" : { "image" : "/images/file_icons16x16/<%= t %>.png" } },
		<% } %>
		"unknown"  : { "icon" : { "image" : "/images/file_icons16x16/defaut.png" } },
		"link" : {
		    "open_node"   : false,
		    "close_node"  : false,
		    "create_node" : false,
		    "delete_node" : false,
		    "icon" : { "image" : "/images/file_icons16x16/link.png" }
		}
	    }
	},
	"dnd" : {
	    "drop_finish" : function(node) { this.cut(node); this.paste(node); }
	},
	"contextmenu" : {
	    "select_node" : true,
            "items": {
		"create" : {
		    "label"  : "<%= j _("Create Folder") %>",
		    "icon"   : "/images/page_icons/folder_add.png",
		    "action" : function(node) {
			this.create_node(node, function() {
			    if (node.attr("rel") === "folder") {
				return "inside";
			    }
			    return "after";
			}, 'closed', null, false);
			create_dir(node);
		    }
		},
		"rename" : {
		    "label"  : "<%= j _("Rename") %>",
		    "icon"   : "/images/page_icons/page_white_paintbrush.png",
		    "action" : function(node) { this.rename(node); }
		},
		"remove" : {
		    "label"  : "<%= j _("Remove") %>",
		    "icon"   : "/images/page_icons/delete.png",
		    "action" : remove
		},
		"ccp" : false,
		"refresh" : {
		    "label"  : "<%= j _("Refresh") %>",
		    "icon"   : "/images/page_icons/arrow_refresh.png",
		    "action" : refresh_cur
		},
		"zip" : {
		    "label"  : "<%= j _("Zip") %>",
		    "icon"   : "/images/file_icons16x16/zip.png",
		    "action" : zip
		}
	    }
	}
    })
    .bind("select_node.jstree", preview)
    .bind("move_node.jstree",   move)
    .bind("rename_node.jstree", rename)
    .bind("load_node.jstree",   function() { $("li[rel=link]").addClass('jstree-leaf').removeClass('jstree-closed'); });
});
//]]>
</script>
