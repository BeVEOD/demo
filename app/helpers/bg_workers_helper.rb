# encoding: utf-8
################################################
## This file and all its content belong to Faveod S.A.S unless a commercial
## contract signed by a representant of Faveod S.A.S states otherwise.
##########
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
################################################
## This has been generated by Faveod Generator on Thu Oct 31 16:38:01 +0100 2013
## It should be placed at 'app/helpers/bg_workers_helper.rb'
## All manual modifications will be destroyed on next generation
################################################


module BgWorkersHelper


  # Author:: Sylvain Abélard
  # Version:: 17
  # Last Update:: 2013-03-19 15:06:38 UTC
  # Status:: Validation Pending


  def bottom_links_for_show(opts={})

    links = []
    if request.xhr?
      links << link_to_remote(image_tag('std/edit.png', :title => _("Edit")), :update => 'bg_workers_element', :url => {:action => :edit, :id => @bg_worker, :version => params[:version]})
    else
      links << if @pres_mode == :list_zoom
        %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ @bg_worker.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/page_icons/page_white_paintbrush.png" alt="#{ _(%q{Edit}) }" title="#{ _(%q{Edit}) }" /> #{ _(%q{Edit}) }</a>}
      else
        %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ @bg_worker.id }" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/page_icons/page_white_paintbrush.png" alt="#{ _(%q{Edit}) }" title="#{ _(%q{Edit}) }" /> #{ _(%q{Edit}) }</a>}
      end
    end
    links << if @pres_mode == :list_zoom
      %Q{<a href="#" data-confirm="#{ _('Do you really want to delete %{record}?') % {:record => @bg_worker.disp_name} }" data-method="post" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/destroy/#{ @bg_worker.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" title="#{ _(%q{Deletes an object or list of objects from the database.}) }"><img src="/images/page_icons/cancel.png" alt="#{ _(%q{Destroy}) }" title="#{ _(%q{Destroy}) }" /> #{ _(%q{Destroy}) }</a>}
    else
      %Q{<a data-confirm="#{ _('Do you really want to delete %{record}?') % {:record => @bg_worker.disp_name} }" data-method="post" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/destroy/#{ @bg_worker.id }" title="#{ _(%q{Deletes an object or list of objects from the database.}) }"><img src="/images/page_icons/cancel.png" alt="#{ _(%q{Destroy}) }" title="#{ _(%q{Destroy}) }" /> #{ _(%q{Destroy}) }</a>}
    end
    links << if @pres_mode == :list_zoom
      %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/index', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Index of all bg_workers.}) }"><img src="/images/page_icons/application_xp_terminal.png" alt="#{ _(%q{Background Workers}) }" title="#{ _(%q{Background Workers}) }"/> #{ _(%q{Background Workers}) }</a>}
    else
      %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/index" rel="nofollow" title="#{ _(%q{Index of all bg_workers.}) }"><img src="/images/page_icons/application_xp_terminal.png" alt="#{ _(%q{Background Workers}) }" title="#{ _(%q{Background Workers}) }"/> #{ _(%q{Background Workers}) }</a>}
    end
    unless opts[:no_sibling]
      prev = BgWorker.first(:select => '`bg_workers`.id', :conditions => ["`bg_workers`.id < ?", @bg_worker.id], :order => '`bg_workers`.id DESC')
      nex = BgWorker.first(:select => '`bg_workers`.id', :conditions => ["`bg_workers`.id > ?", @bg_worker.id], :order => '`bg_workers`.id')
      if request.xhr?
        links << link_to_remote(image_tag('std/go_left.png', :title => _("Previous")), :update => 'bg_workers_element', :url => {:action => :show, :id => prev.id}) if prev
        links << link_to_remote(image_tag('std/go_right.png', :title => _("Next")), :update => 'bg_workers_element', :url => {:action => :show, :id => nex.id}) if nex
      else
        if prev
          links << if @pres_mode == :list_zoom
            %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ prev.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/go_left.png" alt="#{ _(%q{Previous}) }" title="#{ _(%q{Previous}) }"/></a>}
          else
            %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ prev.id }" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/go_left.png" alt="#{ _(%q{Previous}) }" title="#{ _(%q{Previous}) }"/></a>}
          end
        end
        if nex
          links << if @pres_mode == :list_zoom
            %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ nex.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/go_right.png" alt="#{ _(%q{Next}) }" title="#{ _(%q{Next}) }"/></a>}
          else
            %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ nex.id }" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/go_right.png" alt="#{ _(%q{Next}) }" title="#{ _(%q{Next}) }"/></a>}
          end
        end
      end
    end
    return content_tag(:span, links.compact.join(' | ').html_safe, :class => 'std_links')
  end


  # Author:: Sylvain Abélard
  # Version:: 17
  # Last Update:: 2013-03-19 15:06:52 UTC
  # Status:: Validation Pending


  def bottom_links_for_edit(opts={})

    links = []
    if request.xhr?
      links << link_to_remote(image_tag('std/show.png', :title => _('Show')), :update => 'bg_workers_element', :url => {:action => :show, :id => @bg_worker, :version => params[:version]})
    else
      links << if @pres_mode == :list_zoom
        %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ @bg_worker.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/show.png" alt="#{ _(%q{Show}) }" title="#{ _(%q{Show}) }" /> #{ _(%q{Show}) }</a>}
      else
        %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ @bg_worker.id }" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/show.png" alt="#{ _(%q{Show}) }" title="#{ _(%q{Show}) }" /> #{ _(%q{Show}) }</a>}
      end
    end
    links << if @pres_mode == :list_zoom
      %Q{<a href="#" data-confirm="#{ _('Do you really want to delete %{record}?') % {:record => @bg_worker.disp_name} }" data-method="post" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/destroy/#{ @bg_worker.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" title="#{ _(%q{Deletes an object or list of objects from the database.}) }"><img src="/images/page_icons/cancel.png" alt="#{ _(%q{Destroy}) }" title="#{ _(%q{Destroy}) }" /> #{ _(%q{Destroy}) }</a>}
    else
      %Q{<a data-confirm="#{ _('Do you really want to delete %{record}?') % {:record => @bg_worker.disp_name} }" data-method="post" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/destroy/#{ @bg_worker.id }" title="#{ _(%q{Deletes an object or list of objects from the database.}) }"><img src="/images/page_icons/cancel.png" alt="#{ _(%q{Destroy}) }" title="#{ _(%q{Destroy}) }" /> #{ _(%q{Destroy}) }</a>}
    end
    links << if @pres_mode == :list_zoom
      %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/index', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Index of all bg_workers.}) }"><img src="/images/page_icons/application_xp_terminal.png" alt="#{ _(%q{Background Workers}) }" title="#{ _(%q{Background Workers}) }"/> #{ _(%q{Background Workers}) }</a>}
    else
      %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/index" rel="nofollow" title="#{ _(%q{Index of all bg_workers.}) }"><img src="/images/page_icons/application_xp_terminal.png" alt="#{ _(%q{Background Workers}) }" title="#{ _(%q{Background Workers}) }"/> #{ _(%q{Background Workers}) }</a>}
    end
    prev = BgWorker.first(:select => '`bg_workers`.id', :conditions => ["`bg_workers`.id < ?", @bg_worker.id], :order => '`bg_workers`.id DESC')
    nex = BgWorker.first(:select => '`bg_workers`.id', :conditions => ["`bg_workers`.id > ?", @bg_worker.id], :order => '`bg_workers`.id')
    if request.xhr?
      links << link_to_remote(image_tag('std/go_left.png', :title => _('Previous')), :update => 'bg_workers_element', :url => {:action => :edit, :id => prev.id}) if prev
      links << link_to_remote(image_tag('std/go_right.png', :title => _('Next')), :update => 'bg_workers_element', :url => {:action => :edit, :id => nex.id}) if nex
    else
      if prev
        links << if @pres_mode == :list_zoom
          %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ prev.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/std/go_left.png" alt="#{ _(%q{Previous}) }" title="#{ _(%q{Previous}) }"/></a>}
        else
          %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ prev.id }" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/std/go_left.png" alt="#{ _(%q{Previous}) }" title="#{ _(%q{Previous}) }"/></a>}
        end
      end
      if nex
        links << if @pres_mode == :list_zoom
          %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ nex.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/std/go_right.png" alt="#{ _(%q{Next}) }" title="#{ _(%q{Next}) }"/></a>}
        else
          %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ nex.id }" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/std/go_right.png" alt="#{ _(%q{Next}) }" title="#{ _(%q{Next}) }"/></a>}
        end
      end
    end
    return content_tag(:span, links.compact.join(' | ').html_safe, :class => 'std_links')
  end


  # Displays details about series
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-10-05 13:31:56 UTC
  # Status:: In Progress


  def series_details(s, txt=nil)
    return 'empty' if s.blank?
    info = "#{s.calculation}"
    info << " of #{s.field.name}" if s.field
      info << " by #{s.key_field.name}" if s.key_field
        details = txt || info
        content_tag(:span,
        content_tag(:span, '&nbsp;&nbsp;&nbsp;', :style => "background-color: #{s.html_color}; border: 1px inset gray;") +
        " #{s.disp_name} [#{details}]",
        :title => info,
        :class => "report_#{s.serie_type.downcase}")
      end


      # Generally used for list actions.
      #
      # Author:: Sylvain Abélard
      # Version:: 3
      # Last Update:: 2010-01-25 11:48:35 UTC
      # Status:: Requires Tests


      def links_for_list_element(row, opts={})
        html = []
        if @pres_mode == :list_zoom
          html << link_to_remote(image_tag('std/show.png', :title => _('Show')),
          :url => {:controller => :bg_workers, :action => :show, :id => row.id},
          :update => "bg_workers_element")
          html << link_to_remote(image_tag('std/edit.png', :title => _('Edit')),
          :url => {:controller => :bg_workers, :action => :edit, :id => row.id},
          :update => "bg_workers_element")
        else
          html << if @pres_mode == :list_zoom
            %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ row.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/show.png" alt="#{ _(%q{Show}) }" title="#{ _(%q{Show}) }" /></a>}
          else
            %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/show/#{ row.id }" rel="nofollow" title="#{ _(%q{Display the record.}) }"><img src="/images/std/show.png" alt="#{ _(%q{Show}) }" title="#{ _(%q{Show}) }" /></a>}
          end
          html << if @pres_mode == :list_zoom
            %Q{<a href="#" data-method="get" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ row.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/page_icons/page_white_paintbrush.png" alt="#{ _(%q{Edit}) }" title="#{ _(%q{Edit}) }" /></a>}
          else
            %Q{<a data-method="get" href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/edit/#{ row.id }" rel="nofollow" title="#{ _(%q{Load the data to fill the edit form.}) }"><img src="/images/page_icons/page_white_paintbrush.png" alt="#{ _(%q{Edit}) }" title="#{ _(%q{Edit}) }" /></a>}
          end
          html << if @pres_mode == :list_zoom
            %Q{<a href="#" onclick="new Ajax.Updater('bg_workers_element', '#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/run_task/#{ row.id }', {asynchronous:true, evalScripts:true});location.href='#bg_workers_element'; return false;" title="#{ _(%q{Background Workers: running tasks.}) }"><img src="/images/page_icons/resultset_next.png" alt="#{ _(%q{Run Task}) }" title="#{ _(%q{Run Task}) }" /></a>}
          else
            %Q{<a href="#{ "/#{params[:lang]}" if params[:lang] }/bg_workers/run_task/#{ row.id }" title="#{ _(%q{Background Workers: running tasks.}) }"><img src="/images/page_icons/resultset_next.png" alt="#{ _(%q{Run Task}) }" title="#{ _(%q{Run Task}) }" /></a>}
          end
          html << nil
        end
        html << link_to(image_tag('std/del.png', :title => _('Delete')), {:controller => :bg_workers, :action => :destroy, :id => row.id}, :confirm => _("Are you sure that you want to delete %{record}?") % {:record => row.disp_name}, :method => :post)
        return html.compact.join(' | ')
      end

    end
