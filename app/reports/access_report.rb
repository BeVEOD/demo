# -*- encoding : utf-8 -*-
################################################
## This file and all its content belong to Faveod S.A.S unless a commercial
## contract signed by a representant of Faveod S.A.S states otherwise.
##############
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
################################################
## This has been generated by Faveod Generator on Thu Apr 04 01:37:23 +0200 2013
## It should be placed at 'app/reports/access_report.rb'
## All manual modifications will be destroyed on next generation
################################################


class AccessReport < AbstractReport


  # All available declared reports

  AVAILABLE_REPORTS = {:count_of_action_sid_by_profile_accesses=>"Count of Action by Profile Accesses", :count_of_action_sid_by_table_sid=>"Count of Action by Table", :count_of_table_sid_by_field_sid=>"Count of Table by Field", :count_of_app_sid_by_user_accesses=>"Count of Application by User Accesses", :count_of_field_sid_by_action_sid=>"Count of Field by Action", :count_of_each_of_table_sid=>"Count of each value of Table", :count_of_action_sid_by_field_sid=>"Count of Action by Field", :count_of_field_sid_by_home_page_profiles=>"Count of Field by Home Page Profiles"}


  # main report method for Report named "Count of Table by Field" in JSON format
  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def report_count_of_table_sid_by_field_sid_json(opts={})
    @data[:elements] = []
    setup_count_of_table_sid_by_field_sid_x_axis_json

    report_serie_1_json(opts[:serie1] || {})

    setup_count_of_table_sid_by_field_sid_y_axis_json
    setup_style_of_count_of_table_sid_by_field_sid_json(opts)
    return @data
  end


  # main report method for Report "Count of Table by Field" in HTML format
  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def report_count_of_table_sid_by_field_sid_html(opts={})
    setup_count_of_table_sid_by_field_sid_x_axis_json

    report_serie_1_json(opts[:serie1] || {})

    setup_count_of_table_sid_by_field_sid_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_table_sid_by_field_sid_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[ By field_sid])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="area" id="serie_count-of-table-by-field"><th>Count of Table By Field</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_table_sid_by_field_sid_report">%s</table>] % html.join("\n")
  end


  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def setup_style_of_count_of_table_sid_by_field_sid_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By field_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }
    @data[:x_legend] = { :text => _("L9"), :style => %q[{font-size:14px;colour:#000000}]}
    @data[:y_legend] = { :text => _("Legend9"), :style => %q[{font-size:14px;colour:#000000;color:#778877}]}

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def setup_style_of_count_of_table_sid_by_field_sid_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By field_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }
    @data[:x_legend] = { :text => _("L9"), :style => %q[{font-size:14px;colour:#000000}]}
    @data[:y_legend] = { :text => _("Legend9"), :style => %q[{font-size:14px;colour:#000000;color:#778877}]}

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Table by Field named Count of Table By Field
  # Serie Count of Table By Field
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def report_serie_1_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :table_sid, :labels => @x_labels, :group => :field_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'area'

    elt[:fill] = @options[:fill_color] || "#C4B86A"
    elt['fill-alpha'] = @options['fill-alpha'] || 0.7
    elt[:width] = 2

    elt[:colour] = @options[:color] || @options[:colour] || '#EEEEEE'
    elt[:tip] = %Q[#val# %]

    elt['dot-style'] = {:type => 'dot', :colour => '#006FA5', 'dot-size' => 4}
    @data[:elements] << elt
  end


  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def setup_count_of_table_sid_by_field_sid_x_axis_json(opts={})

    @x_labels = Access.all(:select => Access.connection.distinct('field_sid', nil)).map{|r| r.field_sid}.compact

    @data[:x_axis] = { :labels => { :labels => (@formatted_x_labels || @x_labels), :rotate => 45, :colour => '#9F819F'}, 'grid-colour' => "#C0C0C0"}
    return @data[:x_axis]

  end


  # Report Count of Table by Field with series: Area
  #
  # Author:: Yann Azoury
  # Version:: 24
  # Last Update:: 2009-10-21 19:32:24 UTC


  def setup_count_of_table_sid_by_field_sid_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @mins << @data[:elements][0][:values].min
    @maxs << @data[:elements][0][:values].max

    @min = @mins.compact.min || 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:y_axis] = h

  end


  def convert_to_percentage_count_of_table_sid_by_field_sid

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Field by Action" in JSON format
  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def report_count_of_field_sid_by_action_sid_json(opts={})
    @data[:elements] = []
    setup_count_of_field_sid_by_action_sid_x_axis_json

    report_serie_2_json(opts[:serie1] || {})
    report_serie_12_json(opts[:serie2] || {})

    setup_count_of_field_sid_by_action_sid_y_axis_json
    setup_style_of_count_of_field_sid_by_action_sid_json(opts)
    return @data
  end


  # main report method for Report "Count of Field by Action" in HTML format
  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def report_count_of_field_sid_by_action_sid_html(opts={})
    setup_count_of_field_sid_by_action_sid_x_axis_json

    report_serie_2_json(opts[:serie1] || {})
    report_serie_12_json(opts[:serie2] || {})

    setup_count_of_field_sid_by_action_sid_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_field_sid_by_action_sid_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[ By action_sid])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="line" id="serie_serie-count"><th>Serie count</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    html << %Q[<tr class="bar" id="serie_test"><th>Test</th>%s</tr>] % @data[:elements][1][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_field_sid_by_action_sid_report">%s</table>] % html.join("\n")
  end


  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def setup_style_of_count_of_field_sid_by_action_sid_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By action_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def setup_style_of_count_of_field_sid_by_action_sid_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By action_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Field by Action named Serie count
  # Serie Serie count
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def report_serie_2_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :field_sid, :labels => @x_labels, :group => :action_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'

    elt[:colour] = @options[:color] || @options[:colour] || '#D53232'
    elt[:tip] = %Q[#val#]

    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Serie for report Count of Field by Action named Test
  # Serie Test
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def report_serie_12_json(opts={})
    elt = {:id => 2}

    elt[:values] = Access.actions.report_calculation(:count, :field_sid, :labels => @x_labels, :group => :action_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'bar'

    elt[:colour] = @options[:color] || @options[:colour] || '#67B9FF'
    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def setup_count_of_field_sid_by_action_sid_x_axis_json(opts={})

    @x_labels = Access.all(:select => Access.connection.distinct('action_sid', nil)).map{|r| r.action_sid}.compact

    @data[:x_axis] = { :labels => { :labels => (@formatted_x_labels || @x_labels), :rotate => 45, :colour => '#9F819F'}, 'grid-colour' => "#C0C0C0"}
    return @data[:x_axis]

  end


  # Report Count of Field by Action with series: Line, Bar
  #
  # Author:: Yann Azoury
  # Version:: 4
  # Last Update:: 2009-10-08 16:44:10 UTC


  def setup_count_of_field_sid_by_action_sid_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @maxs << @data[:elements][1][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:y_axis] = h

  end


  def convert_to_percentage_count_of_field_sid_by_action_sid

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

    sum = @data[:elements][1][:values].sum
    @data[:elements][1][:values] = @data[:elements][1][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Action by Field" in JSON format
  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def report_count_of_action_sid_by_field_sid_json(opts={})
    @data[:elements] = []
    setup_count_of_action_sid_by_field_sid_x_axis_json

    report_serie_21_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_field_sid_y_axis_json
    setup_style_of_count_of_action_sid_by_field_sid_json(opts)
    return @data
  end


  # main report method for Report "Count of Action by Field" in HTML format
  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def report_count_of_action_sid_by_field_sid_html(opts={})
    setup_count_of_action_sid_by_field_sid_x_axis_json

    report_serie_21_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_field_sid_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_action_sid_by_field_sid_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[ By field_sid])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="radar" id="serie_count-of-action"><th>Count of Action</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_action_sid_by_field_sid_report">%s</table>] % html.join("\n")
  end


  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def setup_style_of_count_of_action_sid_by_field_sid_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By field_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def setup_style_of_count_of_action_sid_by_field_sid_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[ By field_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Action by Field named Count of Action
  # Serie Count of Action
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def report_serie_21_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :action_sid, :labels => @x_labels, :group => :field_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'
    elt[:loop] = true

    elt[:colour] = @options[:color] || @options[:colour] || '#0000FF'
    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def setup_count_of_action_sid_by_field_sid_x_axis_json(opts={})

    @x_labels = Access.all(:select => Access.connection.distinct('field_sid', nil)).map{|r| r.field_sid}.compact

  end


  # Report Count of Action by Field with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 1
  # Last Update:: 2009-09-30 19:40:35 UTC


  def setup_count_of_action_sid_by_field_sid_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:radar_axis] = h
    setup_count_of_action_sid_by_field_sid_radar_axis_json(opts)

  end

  def setup_count_of_action_sid_by_field_sid_radar_axis_json(opts={})
    @data[:radar_axis][:labels][:labels] = (@min..@max).number_list.map{|n| n.is_a?(Rational) ? n.to_f.to_s : n.to_s}
    @data[:radar_axis]['spoke-labels'] = { :labels => (@formatted_x_labels || @x_labels), :colour => '#9F819F'}
  end


  def convert_to_percentage_count_of_action_sid_by_field_sid

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Field by Home Page Profiles" in JSON format
  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def report_count_of_field_sid_by_home_page_profiles_json(opts={})
    @data[:elements] = []
    setup_count_of_field_sid_by_home_page_profiles_x_axis_json

    report_serie_22_json(opts[:serie1] || {})

    setup_count_of_field_sid_by_home_page_profiles_y_axis_json
    setup_style_of_count_of_field_sid_by_home_page_profiles_json(opts)
    return @data
  end


  # main report method for Report "Count of Field by Home Page Profiles" in HTML format
  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def report_count_of_field_sid_by_home_page_profiles_html(opts={})
    setup_count_of_field_sid_by_home_page_profiles_x_axis_json

    report_serie_22_json(opts[:serie1] || {})

    setup_count_of_field_sid_by_home_page_profiles_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_field_sid_by_home_page_profiles_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[Count of Field By home_page_profiles])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="radar" id="serie_count-of-field"><th>Count of Field</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_field_sid_by_home_page_profiles_report">%s</table>] % html.join("\n")
  end


  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def setup_style_of_count_of_field_sid_by_home_page_profiles_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Field By home_page_profiles], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def setup_style_of_count_of_field_sid_by_home_page_profiles_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Field By home_page_profiles], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Field by Home Page Profiles named Count of Field
  # Serie Count of Field
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def report_serie_22_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :field_sid, :labels => @x_labels, :group => :home_page_profiles, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'
    elt[:loop] = true

    elt[:colour] = @options[:color] || @options[:colour] || '#0000FF'
    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def setup_count_of_field_sid_by_home_page_profiles_x_axis_json(opts={})

    @x_labels = Profile.all
    @formatted_x_labels = @x_labels.map(&:disp_name)

  end


  # Report Count of Field by Home Page Profiles with series: Radar
  #
  # Author:: Sylvain Abélard
  # Version:: 6
  # Last Update:: 2009-10-08 18:31:26 UTC


  def setup_count_of_field_sid_by_home_page_profiles_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:radar_axis] = h
    setup_count_of_field_sid_by_home_page_profiles_radar_axis_json(opts)

  end

  def setup_count_of_field_sid_by_home_page_profiles_radar_axis_json(opts={})
    @data[:radar_axis][:labels][:labels] = (@min..@max).number_list.map{|n| n.is_a?(Rational) ? n.to_f.to_s : n.to_s}
    @data[:radar_axis]['spoke-labels'] = { :labels => (@formatted_x_labels || @x_labels), :colour => '#9F819F'}
  end


  def convert_to_percentage_count_of_field_sid_by_home_page_profiles

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Action by Profile Accesses" in JSON format
  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def report_count_of_action_sid_by_profile_accesses_json(opts={})
    @data[:elements] = []
    setup_count_of_action_sid_by_profile_accesses_x_axis_json

    report_serie_28_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_profile_accesses_y_axis_json
    setup_style_of_count_of_action_sid_by_profile_accesses_json(opts)
    return @data
  end


  # main report method for Report "Count of Action by Profile Accesses" in HTML format
  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def report_count_of_action_sid_by_profile_accesses_html(opts={})
    setup_count_of_action_sid_by_profile_accesses_x_axis_json

    report_serie_28_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_profile_accesses_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_action_sid_by_profile_accesses_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[Count of Action By profile_accesses])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="line" id="serie_count-of-action"><th>Count of Action</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_action_sid_by_profile_accesses_report">%s</table>] % html.join("\n")
  end


  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def setup_style_of_count_of_action_sid_by_profile_accesses_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Action By profile_accesses], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def setup_style_of_count_of_action_sid_by_profile_accesses_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Action By profile_accesses], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Action by Profile Accesses named Count of Action
  # Serie Count of Action
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def report_serie_28_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :action_sid, :labels => @x_labels, :group => :profile_accesses, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'

    elt[:colour] = @options[:color] || @options[:colour] || '#0000FF'
    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def setup_count_of_action_sid_by_profile_accesses_x_axis_json(opts={})

    @x_labels = ProfileAccess.all
    @formatted_x_labels = @x_labels.map(&:disp_name)

    @data[:x_axis] = { :labels => { :labels => (@formatted_x_labels || @x_labels), :rotate => 45, :colour => '#9F819F'}, 'grid-colour' => "#C0C0C0"}
    return @data[:x_axis]

  end


  # Report Count of Action by Profile Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 10
  # Last Update:: 2009-10-09 15:52:45 UTC


  def setup_count_of_action_sid_by_profile_accesses_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:y_axis] = h

  end


  def convert_to_percentage_count_of_action_sid_by_profile_accesses

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Action by Table" in JSON format
  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def report_count_of_action_sid_by_table_sid_json(opts={})
    @data[:elements] = []
    setup_count_of_action_sid_by_table_sid_x_axis_json

    report_serie_29_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_table_sid_y_axis_json
    setup_style_of_count_of_action_sid_by_table_sid_json(opts)
    return @data
  end


  # main report method for Report "Count of Action by Table" in HTML format
  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def report_count_of_action_sid_by_table_sid_html(opts={})
    setup_count_of_action_sid_by_table_sid_x_axis_json

    report_serie_29_json(opts[:serie1] || {})

    setup_count_of_action_sid_by_table_sid_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_action_sid_by_table_sid_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[Count of Action By table_sid])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="line" id="serie_count-of-action"><th>Count of Action</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_action_sid_by_table_sid_report">%s</table>] % html.join("\n")
  end


  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def setup_style_of_count_of_action_sid_by_table_sid_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Action By table_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#C9E9BF"
  end


  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def setup_style_of_count_of_action_sid_by_table_sid_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Action By table_sid], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#C9E9BF"
  end

  # Serie for report Count of Action by Table named Count of Action
  # Serie Count of Action
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def report_serie_29_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.actions.report_calculation(:count, :action_sid, :labels => @x_labels, :group => :table_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'

    elt[:colour] = @options[:color] || @options[:colour] || '#AA0000'
    elt['dot-style'] = {:type => 'solid-dot', :colour => '#4B8CE9'}
    @data[:elements] << elt
  end


  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def setup_count_of_action_sid_by_table_sid_x_axis_json(opts={})

    @x_labels = Access.all(:select => Access.connection.distinct('table_sid', nil)).map{|r| r.table_sid}.compact

    @data[:x_axis] = { :labels => { :labels => (@formatted_x_labels || @x_labels), :rotate => 45, :colour => '#FFDF6B'}, 'grid-colour' => "#C0C0C0"}
    return @data[:x_axis]

  end


  # Report Count of Action by Table with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 8
  # Last Update:: 2009-10-09 17:29:41 UTC


  def setup_count_of_action_sid_by_table_sid_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:y_axis] = h

  end


  def convert_to_percentage_count_of_action_sid_by_table_sid

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of Application by User Accesses" in JSON format
  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def report_count_of_app_sid_by_user_accesses_json(opts={})
    @data[:elements] = []
    setup_count_of_app_sid_by_user_accesses_x_axis_json

    report_serie_30_json(opts[:serie1] || {})

    setup_count_of_app_sid_by_user_accesses_y_axis_json
    setup_style_of_count_of_app_sid_by_user_accesses_json(opts)
    return @data
  end


  # main report method for Report "Count of Application by User Accesses" in HTML format
  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def report_count_of_app_sid_by_user_accesses_html(opts={})
    setup_count_of_app_sid_by_user_accesses_x_axis_json

    report_serie_30_json(opts[:serie1] || {})

    setup_count_of_app_sid_by_user_accesses_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_app_sid_by_user_accesses_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[Count of Application By user_accesses])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="line" id="serie_count-of-application"><th>Count of Application</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_app_sid_by_user_accesses_report">%s</table>] % html.join("\n")
  end


  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def setup_style_of_count_of_app_sid_by_user_accesses_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Application By user_accesses], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def setup_style_of_count_of_app_sid_by_user_accesses_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Application By user_accesses], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of Application by User Accesses named Count of Application
  # Serie Count of Application
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def report_serie_30_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :app_sid, :labels => @x_labels, :group => :user_accesses, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'line'

    elt[:colour] = @options[:color] || @options[:colour] || '#0000FF'
    elt['dot-style'] = {:type => 'dot', :colour => '#000000'}
    @data[:elements] << elt
  end


  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def setup_count_of_app_sid_by_user_accesses_x_axis_json(opts={})

    @x_labels = UserAccess.all
    @formatted_x_labels = @x_labels.map(&:disp_name)

    @data[:x_axis] = { :labels => { :labels => (@formatted_x_labels || @x_labels), :rotate => 45, :colour => '#9F819F'}, 'grid-colour' => "#C0C0C0"}
    return @data[:x_axis]

  end


  # Report Count of Application by User Accesses with series: Line
  #
  # Author:: Yann Azoury
  # Version:: 6
  # Last Update:: 2009-10-09 22:07:45 UTC


  def setup_count_of_app_sid_by_user_accesses_y_axis_json(opts={})
    @mins = []
    @maxs = []

    @maxs << @data[:elements][0][:values].max

    @min = 0
    @max = @maxs.compact.max || 10
    @max +=1 if @min == @max
    h = (@min..@max).chart_hash(10)
    h['grid-colour'] = "#C0C0C0"

    h[:labels] = {:text => "#val#"}

    h[:labels][:style] = %q[{font-size:14px}]
    @data[:y_axis] = h

  end


  def convert_to_percentage_count_of_app_sid_by_user_accesses

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end


  # main report method for Report named "Count of each value of Table" in JSON format
  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def report_count_of_each_of_table_sid_json(opts={})
    @data[:elements] = []
    setup_count_of_each_of_table_sid_x_axis_json

    report_serie_41_json(opts[:serie1] || {})

    setup_count_of_each_of_table_sid_y_axis_json
    setup_style_of_count_of_each_of_table_sid_json(opts)
    return @data
  end


  # main report method for Report "Count of each value of Table" in HTML format
  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def report_count_of_each_of_table_sid_html(opts={})
    setup_count_of_each_of_table_sid_x_axis_json

    report_serie_41_json(opts[:serie1] || {})

    setup_count_of_each_of_table_sid_y_axis_json(opts[:y_axis] || {})
    setup_style_of_count_of_each_of_table_sid_html(opts)

    html = []
    html << %q[<caption style="%s">%s</caption>] % [(@data[:title][:style] || '').to_s.gsub(/\{|\}/, ''), (opts[:title] || %Q[Count of Table])]
    html << "<thead><tr><th></th>%s</tr></thead>" % (@formatted_x_labels || @x_labels).map{|l| "<th>#{l}</th>" }.join

    html << %Q[<tr class="pie" id="serie_count-of-table"><th>Count of Table</th>%s</tr>] % @data[:elements][0][:values].map{|l|
    '<td>%s</td>' % (l.is_a?(Array) ? l.join('<br />') : l) }.join

    return %q[<table class="report" id="count_of_each_of_table_sid_report">%s</table>] % html.join("\n")
  end


  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def setup_style_of_count_of_each_of_table_sid_json(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Table], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    i = -1
    labels = @formatted_x_labels || @x_labels
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| {:value => v, :label => labels[i+=1]} }

    @data[:tooltip] = { :mouse => 2 }

    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end


  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def setup_style_of_count_of_each_of_table_sid_html(opts={})

    @data[:title] = { :text => @options[:title] || %q[Count of Table], :style => @options[:title_style] || %q[{font-size:20px;text-align:center;color:#000000}] }

    labels = @formatted_x_labels || @x_labels

    @data[:tooltip] = { :mouse => 2 }
    @data[:bg_colour] = @options[:bg_colour] || @options[:bg_color] || "#FFFFFF"
  end

  # Serie for report Count of each value of Table named Count of Table
  # Serie Count of Table
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def report_serie_41_json(opts={})
    elt = {:id => 1}

    elt[:values] = Access.report_calculation(:count, :table_sid, :labels => @x_labels, :group => :table_sid, :data_set => @options[:data_set])

    elt[:type] = @options[:type] || 'pie'

    elt[:colour] = @options[:color] || @options[:colour] || '#0000FF'
    @data[:elements] << elt
  end


  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def setup_count_of_each_of_table_sid_x_axis_json(opts={})

    @x_labels = Access.all(:select => Access.connection.distinct('table_sid', nil)).map{|r| r.table_sid}.compact

    return @x_labels

  end


  # Report Count of each value of Table with series: Pie
  #
  # Author:: Yann Azoury
  # Version:: 2
  # Last Update:: 2009-10-21 17:54:21 UTC


  def setup_count_of_each_of_table_sid_y_axis_json(opts={})
    @mins = []
    @maxs = []

  end


  def convert_to_percentage_count_of_each_of_table_sid

    sum = @data[:elements][0][:values].sum
    @data[:elements][0][:values] = @data[:elements][0][:values].map{|v| v*100.0 / sum }

  end

end
