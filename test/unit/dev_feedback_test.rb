# encoding: utf-8
################################################
## This file and all its content belong to Faveod S.A.S unless a commercial
## contract signed by a representant of Faveod S.A.S states otherwise.
##########
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
################################################
## This has been generated by Faveod Generator on Thu Oct 31 16:41:16 +0100 2013
## It should be placed at 'test/unit/dev_feedback_test.rb'
## All manual modifications will be destroyed on next generation
################################################


require 'test_helper'

class DevFeedbackTest < ActiveSupport::TestCase

  test "Data still valid" do
    DevFeedback.all.each do |dev_feedback|
      assert(dev_feedback.valid?)
    end
  end

  test "Scopes calls work" do

    assert_not_nil(DevFeedback.open)
    assert_not_nil(DevFeedback.just_opened)
    assert_not_nil(DevFeedback.pending)
    assert_not_nil(DevFeedback.closing)
    assert_not_nil(DevFeedback.closed)
  end

  test "Active Filter" do
    ops = %w(= != ^= $= =~ !~ > < >= <= IN FTS NULL NOT_NULL IN NOT_IN)
    DevFeedback::COMPARATORS.each do |f, h|
      val = case DevFeedback::FIELDS[f]
      when :string, :text, :color, :binary then "test"
      when :integer then 42
      when :float, :double, :decimal then 42.42
      when :boolean then true
      when :date then Date.new
      when :datetime, :time, :timestamp then Time.now
      when :hm_assoc, :habtm_assoc
        next
      when :static_list, :bt_assoc
        next
      else
        next
      end
      ops.select{|op| DevFeedback::COMPARATORS[f][op] }.each { |op|
        assert_not_nil(DevFeedback.active_filter({f => {op => val}}))
      }
    end
  end

end
